[color]
    ui = true
[color "branch"]
    current = yellow reverse
    local = yellow
    remote = green
[color "diff"]
    meta = yellow bold
    frag = magenta bold
    old = red
    new = green
[core]
    excludesfile = ~/.gitignore
    excludesfile = ~/.gitignore_global
    excludesfile = ~/.config/git/ignore
    pager = diff-so-fancy | less --tabs=4 -RFX
[diff]
    algorithm = patience
    # mnemonicprefix = true # might be useful once I understand git diff
[include]
    path = ~/.gitconfig.user
    path = ~/.config/git/user
    path = ~/.local/git/user
[log]
    date = relative
[merge]
    ff = false
    tool = mvimdiff
[mergetool "mvimdiff"]
    cmd="mvim -c 'Gdiff' $MERGED"     # use fugitive.vim for 3-way merge
    keepbackup=false
[pull]
    rebase = preserve
[push]
    default = simple
[alias]
    #via http://stackoverflow.com/questions/5188320/how-can-i-get-a-list-of-git-branches-ordered-by-most-recent-commit
    recent-branches = !git for-each-ref --count=15 --sort=-committerdate refs/heads/ --format='%(refname:short)'

    # via http://blog.apiaxle.com/post/handy-git-tips-to-stop-you-getting-fired/
    snapshot = !git stash save "snapshot: $(date)" && git stash apply "stash@{0}"
    snapshots = !git stash list --grep snapshot

    # add
    a = add
    chunkyadd = add --patch # stage commits chunk by chunk

    # branch
    b = branch -v
    br = branch
    nb = checkout -b # new branch

    # checkout
    co = checkout

    # cherry-pick
    cp = cherry-pick -x # grab a change from a branch

    # commit
    c = commit
    ca = commit -a
    cam = !git add -A && git commit -m
    amend = commit --amend
    ammend = commit --amend

    # diff
    d = diff
    dc = diff --cached # diff staged changes
    dl = diff HEAD^ # diff last committed change

    # log
    l = log --graph --date=short
    last = log -1 HEAD
    lchanges = log --pretty=format:\"%h %cr %cn %Cgreen%s%Creset\" --name-status
    lshort = log --pretty=format:\"%h %cr %cn %Cgreen%s%Creset\"
    lsimple = log --pretty=format:\" * %s\"
    lshortnocolor = log --pretty=format:\"%h %cr %cn %s\"
    filelog = log -u # show changes to a file

    # mergetool
    mt = mergetool # fire up the merge tool

    # pull
    pl = pull

    # push
    ps = push

    # rebase
    ri = rebase -i
    rc = rebase --continue
    rs = rebase --skip

    # remote
    r = remote -v

    # reset
    unstage = reset HEAD # remove files from index (tracking)
    uncommit = reset --soft HEAD^ # go back before last commit, with files in uncommitted state

    # status
    s = status
    st = status

    # stash
    ss = stash # stash changes
    sl = stash list # list stashes
    sa = stash apply  # apply stash (restore changes)
    sd = stash drop # drop stashes (destory changes)

    # tag
    t = tag
[filter "lfs"]
	smudge = git-lfs smudge -- %f
	process = git-lfs filter-process
	required = true
	clean = git-lfs clean -- %f
