#!/usr/bin/env bash
# Bash Strict Mode: http://redsymbol.net/articles/unofficial-bash-strict-mode/
set -euo pipefail
IFS=$'\n\t'
# Bash Strict Mode

source ~/.dotfiles/shells/bash_utils.sh

if ! is_darwin ; then
    return
fi
if ! command_exists brew ; then
    echo_red "Error: homebrew is a prerequisite for this script. Install from brew.sh"
    exit 1
fi

# Install Brew programs
echo_yellow "-[ ] run \`update_brew\`"

# add brew's zsh and bash to the "acceptable shells" file
bash_count=$(cat /etc/shells | grep -c "$(brew --prefix)/bin/bash" || true)
if [[ $bash_count < 1 ]] ; then
    echo "$(brew --prefix)/bin/bash" | sudo tee -a /etc/shells > /dev/null
fi
zsh_count=$(cat /etc/shells | grep -c "$(brew --prefix)/bin/zsh" || true)
if [[ $zsh_count < 1 ]] ; then
    echo "$(brew --prefix)/bin/zsh" | sudo tee -a /etc/shells > /dev/null
fi

echo_yellow "-[ ] install dropbox"
echo_yellow "-[ ] install 1Password"
echo_yellow "-[ ] install jetbrains mono https://www.jetbrains.com/lp/mono/"

# Xcode
# full xcode installation is required
set +e
xcodebuild -version &> /dev/null
if [[ $? != 0 ]] ; then
    echo_yellow "-[ ] TODO you need to install xcode from the app store"
fi
# so is xcode command line tools
xcode-select -version &> /dev/null
if [[ $? != 0 ]] ; then
    xcode-select --install
    sudo xcodebuild -license accept
fi
set -e

dotfiles::symlink_files ~/.dotfiles/macOS/karabiner.json ~/.config/karabiner/karabiner.json

source ./terminfo/install

# skhd
dotfiles::symlink_files ~/.dotfiles/macOS/skhdrc ~/.config/skhd/skhdrc
skhd --start-service || true

dotfiles::symlink_files ~/.dotfiles/macOS/yabairc ~/.config/yabai/yabairc
yabai --start-service || true

# yabai scripting-addition loader (LaunchDaemon)
SCRIPT_SRC=~/.dotfiles/macOS/yabai/yabai-load-sa.sh
SCRIPT_DST=/usr/local/libexec/yabai-load-sa
PLIST_SRC=~/.dotfiles/macOS/yabai/com.ianedington.yabai.plist
PLIST_DST=/Library/LaunchDaemons/com.ianedington.yabai.plist
LABEL=com.ianedington.yabai

# Install script only if missing
if [ -f "$SCRIPT_SRC" ] && [ ! -x "$SCRIPT_DST" ]; then
    sudo install -d -m 0755 -o root -g wheel /usr/local/libexec
    sudo install -m 0755 -o root -g wheel "$SCRIPT_SRC" "$SCRIPT_DST"
fi

# Install plist only if missing
if [ -f "$PLIST_SRC" ] && [ ! -f "$PLIST_DST" ]; then
    sudo install -m 0644 -o root -g wheel "$PLIST_SRC" "$PLIST_DST"
fi

# If job not loaded, bootstrap and start
if ! sudo launchctl print system/$LABEL >/dev/null 2>&1; then
    if [ -f "$PLIST_DST" ]; then
        sudo launchctl bootstrap system "$PLIST_DST"
        sudo launchctl enable system/$LABEL
        sudo launchctl kickstart -k system/$LABEL
    fi
fi

