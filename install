#!/usr/bin/env bash
# Programs are meant to be read. If you can't read this script and you have a suggestion for how I can make it better send a pull request, or create an issue. I love collaborating.

# dotfiles::backup_func () {
    # Check that a backup folder exists
    # if not create a backup folder
    # Check if the offending file already exists in the backup folder
    # if it does
    # move the offending file into the backup folder
    # remove the file in question
    # Add the ~ relative path to the backed up files list
# }

dotfiles::symlink_files () {
    local symlink_to symlink_from
    symlink_to=$1
    symlink_from=$2

    # TODO check if link already exists

    echo "linking:" $symlink_from "->" $symlink_to

    if [ -h $symlink_from ]; then
        rm $symlink_from
    elif [ -e $symlink_from ]; then
        echo $symlink_from " exists and is not a symlink! aboart aboart!"
        echo "we aren't ready to handle this"
        return
        # TODO use the backup_func
    fi

    ln -s $symlink_to $symlink_from
}

SOURCE="${BASH_SOURCE[0]}"
while [ -h "$SOURCE" ]; do # resolve $SOURCE until the file is no longer a symlink
  DIR="$( cd -P "$( dirname "$SOURCE" )" && pwd )"
  SOURCE="$(readlink "$SOURCE")"
  [[ $SOURCE != /* ]] && SOURCE="$DIR/$SOURCE" # if $SOURCE was a relative symlink, we need to resolve it relative to the path where the symlink file was located
done
DOTFILES_ROOT="$( cd -P "$( dirname "$SOURCE" )" && pwd )"
echo "dotfiles root " $DOTFILES_ROOT
echo "current dir " pwd

git submodule update --init --remote --recursive

# in case people want to use comands in their scripts
    # Add bin/ to path
    # Add homebrew bin to path

# install brew on OSX or Linux if it's not already installed
    brew update
    brew upgrade
    brew doctor
        # TODO exit if there's a problem
    brew update
    brew upgrade
    brew doctor
    brew tap homebrew/bundle
    brew bundle

# Symlink the current folder to .dotfiles
dotfiles::symlink_files $DOTFILES_ROOT ~/.dotfiles;
cd ~/.dotfiles

# for each folder in dotfiles/
for dir in */ ; do
    echo Installing the $dir directory:
    cd $dir;

    if [ -f Brewfile ]; then
        brew bundle
    fi

    if [ -f install ]; then
        source ./install
    fi

    # dotfiles::symlink_files for each *.symlink
    # append .zsh files to .zsh
    # append path.zsh files to zsh $PATH
    # append *completion.zsh to
    # append .bash files to .profile
    # append path.bash files to bash $PATH
    cd $DOTFILES_ROOT;
done

exit $?
