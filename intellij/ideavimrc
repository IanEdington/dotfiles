let mapleader = ';'
nnoremap <leader>vs :source ~/.ideavimrc<CR>

" stop the UI sounds
set visualbell
set noerrorbells
set ideajoin

Plug 'tpope/vim-surround'
set scrolloff=4
set history=1000

" line numbers

" search
set incsearch
set ignorecase
set smartcase
set wrapscan
nnoremap sr :%s/
nnoremap se :action SearchEverywhere<CR>

" copy path
nnoremap pwf :action CopyReference<CR> " path to working file

" Cut, Copy, Paste
nnoremap <leader>x "+Ydd
vnoremap <leader>x "+ygvd
inoremap <leader>x <esc>"+Yddi

nnoremap <leader>c "+Y
vnoremap <leader>c "+y
inoremap <leader>c <esc>"+Ya

nnoremap <leader>v "+]p
vnoremap <leader>v d"+]p
inoremap <leader>v <esc>"+]pa
nnoremap <leader>V "+]P
vnoremap <leader>V d"+]P
inoremap <leader>V <esc>"+]Pa

" formatting
nnoremap <leader>fm :action ReformatCode<CR>

" move
nnoremap gwk :action NextSplitter<CR>
nnoremap gwj :action NextSplitter<CR>
nnoremap gwh :action NextSplitter<CR>
nnoremap gwl :action NextSplitter<CR>

nnoremap gwq :action VimWindowClose<CR>
nnoremap gwo :action VimWindowOnly<CR>

nnoremap gu :action FindUsages<CR>
nnoremap gh :action ShowErrorDescription<CR>
" nnoremap gu :action ShowUsages<CR>
" nnoremap gu :action HighlightUsagesInFile<CR>

" remove vscodevim ctrl-* keys I don't use
" ref: https://github.com/JetBrains/ideavim/blob/master/doc/sethandler.md
sethandler <C-D> a:vim
sethandler <C-U> a:vim

sethandler <C-1> a:ide
sethandler <C-2> a:ide
sethandler <C-3> a:ide
sethandler <C-4> a:ide
sethandler <C-5> a:ide
sethandler <C-6> a:ide
sethandler <C-7> a:ide
sethandler <C-8> a:ide
sethandler <C-9> a:ide
sethandler <C-0> a:ide
sethandler <C-A> a:ide
sethandler <C-B> a:ide
sethandler <C-C> a:ide
sethandler <C-E> a:ide
sethandler <C-F> a:ide
sethandler <C-G> a:ide
sethandler <C-H> a:ide
sethandler <C-I> a:ide
sethandler <C-J> a:ide
sethandler <C-K> a:ide
sethandler <C-L> a:ide
sethandler <C-M> a:ide
sethandler <C-N> a:ide
sethandler <C-O> a:ide
sethandler <C-P> a:ide
sethandler <C-Q> a:ide
sethandler <C-R> a:ide
sethandler <C-S> a:ide
sethandler <C-T> a:ide
sethandler <C-V> a:ide
sethandler <C-W> a:ide
sethandler <C-X> a:ide
sethandler <C-Y> a:ide
sethandler <C-Z> a:ide
sethandler <C-[> a:ide
sethandler <C-]> a:ide
sethandler <C-\> a:ide
sethandler <C-S-2> a:ide
sethandler <C-S-6> a:ide

" unimpaired mappings
nnoremap ]p :action GotoNextError<CR>
nnoremap [p :action GotoPreviousError<CR>
nnoremap [<Space> O<esc>j0
nnoremap ]<Space> o<esc>k0
nnoremap [e ddkP
nnoremap ]e ddp
nnoremap [m :action MethodUp<CR>
nnoremap ]m :action MethodDown<CR>

" gitgutter
nnoremap ]c :action VcsShowNextChangeMarker<CR>
nnoremap [c :action VcsShowPrevChangeMarker<CR>
nnoremap <leader>hu :action Vcs.RollbackChangedLines<CR>

" toggle options
nnoremap yow :action EditorToggleUseSoftWraps<CR>
nnoremap yoh :set hlsearch!<CR>
nnoremap yoi :set ignorecase!<CR>
nnoremap yon :set number!<CR>
nnoremap yor :set relativenumber!<CR>
nnoremap yos :set relativenumber!<CR>

" change word case
nnoremap <leader>U viwU
nnoremap <leader>u viwu
inoremap <leader>U <esc>viwU
inoremap <leader>u <esc>viwu

" tpope/vim-abolish Coercion
noremap crs :action StringManipulation.ToSnakeCase<CR>
noremap crm :action StringManipulation.ToPascalCase<CR>
noremap crc :action StringManipulation.ToCamelCase<CR>
noremap cru :action StringManipulation.ToScreamingSnakeCase<CR>
noremap cr- :action StringManipulation.ToHyphenCaseAction<CR>
noremap cr. :action StringManipulation.ToDotStyleAction<CR>
noremap cr<space> :action StringManipulation.ToSentenceCaseOrCamelCase<CR>

" tpope/vim-commentary
Plug 'tpope/vim-commentary'
