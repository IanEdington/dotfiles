" Use Vim settings, rather then Vi settings (much better!).
" This must be first, because it changes other options as a side effect.
set nocompatible

" This is intended to allow overriding <Leader>.
" source ~/.vim/vimrc.before if it exists.
if filereadable(expand("~/.vim/vimrc.before"))
  source ~/.vim/vimrc.before
endif

" ================ General Config ====================

set number
set history=1000
set showcmd
set showmode
set visualbell
set autoread
set hidden
"Allow backspace in insert mode
    set backspace=indent,eol,start
"Disable cursor blink
    set gcr=a:blinkon0

"turn on syntax highlighting
syntax on

" Change leader to a comma because the backslash is too far away. That means all \x commands turn into ,x . The mapleader has to be set before vundle starts loading all the plugins.
" let mapleader=","

" =============== Vundle Initialization ===============

filetype off

" set the runtime path to include Vundle and initialize
set rtp+=~/.vim/bundle/vundle
set rtp+=~/.vim/vundles/ " submodules

call vundle#begin() " required

" let Vundle manage Vundle, required
Plugin 'VundleVim/Vundle.vim'

" These vundles are split up by category into smaller files. This reduces churn and makes it easier to fork. See ~/.vim/vundles/ to edit them:
runtime ruby.vundle
runtime languages.vundle
runtime git.vundle
runtime appearance.vundle
runtime textobjects.vundle
runtime search.vundle
runtime project.vundle
runtime vim-improvements.vundle

" All of your Plugins must be added before the following line
call vundle#end()            " required
filetype plugin indent on    " required

" ================ Turn Off Swap Files ==============

set noswapfile
set nobackup
set nowb

" ================ Persistent Undo ==================
" Keep undo history across sessions, by storing in file. Only works all the time.
if has('persistent_undo')
  if !isdirectory(expand('~').'/.vim/backups')
    silent !mkdir ~/.vim/backups > /dev/null 2>&1
  endif
  set undodir=~/.vim/backups
  set undofile
  set undolevels=1000
  set undoreload=10000
endif

" ================ Indentation ======================

set autoindent
set smartindent
set smarttab
set shiftwidth=2
set softtabstop=2
set tabstop=2
set expandtab

" Auto indent pasted text
nnoremap p p=`]<C-o>
nnoremap P P=`]<C-o>

filetype plugin on
filetype indent on

" ================ Folds ============================

" set foldmethod=indent
" set foldnestmax=3
" set nofoldenable

" ================ Scrolling ========================

"Start scrolling when we're 8 lines away from margins
    set scrolloff=8
set sidescrolloff=15
set sidescroll=1

" ================ Search ===========================

set incsearch       " Find the next match as we type the search
set hlsearch        " Highlight searches by default
set ignorecase      " Ignore case when searching...
set smartcase       " ...unless we type a capital

" ================ Mouse ========================
set mouse+=a " enable mouse mode (scrolling, selection, etc)
if &term =~ '^screen'
    " tmux knows the extended mouse mode
    set ttymouse=xterm2
endif

" ================ Custom Settings ========================
let vimsettings = '~/.vim/settings'
let uname = system("uname -s")

for fpath in split(globpath(vimsettings, '*.vim'), '\n')

    if (fpath == expand(vimsettings) . "/yadr-keymap-mac.vim") && uname[:4] ==? "linux"
        continue " skip mac mappings for linux
    endif

    if (fpath == expand(vimsettings) . "/yadr-keymap-linux.vim") && uname[:4] !=? "linux"
        continue " skip linux mappings for mac
    endif

    exe 'source' fpath
endfor

